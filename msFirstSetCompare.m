function [results] = msFirstSetCompare(nTrials)

%n = 10000;
load phycfull;
load yCyt;

sec2 = 'MDASEEAKRVSIQVTSLSTQLIESVDKQSHLEEQLNKSLKTIASQKAAIENYNQLKEDYNTLKRELSDRDDEVKRLREDIAKENELRTKAEEEADKLNKEVEDLTASLFDEANNMVADARKEKYAIEILNKRLTEQLREKDTLLDTLTLQLKNLKKVMHSLDNESTVTNNSNRYSTILSDSATSSSTSLNKVPTSYSLASQDIYSGIVYSPSISSIRYDISLYNEFLKFVAALPRCENIKATSTESKLIRRLVNDEIQPILKIDNASGIGWLVKKTLLSLIIDGLVVVEPLSGVNATYQIGYNSSSPAKQATSNMPKMFKFPLDSPPVAVHAACSFCGESRDDIIEHARMYILKTLHKTDDGKEQVTNTYPLCHWCLLKLRQTCEIFAFLRSLKVGAWHLEKLTTQNITKEDLEKFSEVTKHTKRDGRVSSQDKKTKRLSFMAGLGINSSTKNKPKMEIFSSETNAKPGQPTTNIQRAWLQLCKLRCILHWTHIGIWAVDDSISSKIGPLVEDDSDEDQNDAISVRLQDKALWKQDAKRPFSSSSAEESQKSDAFDFESGDMENEITGESSSDESSSDGSSTDNSTADSSSEDESSLADSTTSSADSSSPESIDNGEGDDTVTKDDKSSIKSANNNEENSDCGDKKGRSIIKKKAPQRKIQKKKLLQDLDDLEEQFREESAIDQTEFENAESNVKQNISSKRASSGDENSKKDNNEKTLKTNLTIGDKTQEQIGENSPSSGLHASSSNDDNFDDAQEQQ';
kre5 = 'MRLLALVLLLLCAPLRAWTYSLRYGIPESAQVWSILVHLLGDVDNQLLTNLYPLVTGLDDEIDIQENLVALTSNVLRERYDKEDVADLLELYASLYPMGMIQHDISSNAEQDDANSSYFVLNGNRYEKPDDVFYLKSKDLTIQQKVPDVDVIQPYDVVIGTNSEAPILILYGCPTVIDSDFEEFNRNLFMEAMNGEGKFRFIWRSTCSLDGKSVEYPLTHPLEITLQNGSRMSSIPQLKKILYTVPKEILVGADNDDQLHDLEPEELRELDLRVTSLISEFYQYKKDITATLNFTKSIVNNFPLISKQLIKVSSVNKDIITSNEELNSKGFDYNMLGLYINGQNWKITSLTPYNLLTALKTEYQSLLKITNLLQELEPSKCILDSKFLLNKFSQFSLGKLQNLQPIKMDLHTIPGFSESVIYFNDIESDPQYDELVNSVQAFFDKSKFGELPEIKQNWSEIIFVIDFARLEDSEVKEALGGLVRAVNVVSQGYPQRVGLLPFSSDSDKSVVNKIYELKNSTDNLTELKSFLETMLLADGLSANAKHSKHIPVPDVFHLLDELQIDETSIIINGEIYPFRKNAWNYLIAKVIKKDTEFIRKELSNSSPKNKQISVRDLLHYKSANLRHNKYTPNYFADSVYSSVNNTALESVCSERIGYYTKNEEYNLLHTITLVDDFGSIHALKRLRNLLHTSFVGVRIRIIHVGDISDIWYQLRGSLSQKDPIGSINTFIDALKLKKVKSHTYKKSGLNQLGLHKWLPDIPLFELQKGSFIALNGRFIHLDQNEVPETEHFEAIIKREALRTIDSVFALDLLFPGFSQEIINPDLIEMISSILTRLFYQGTHIYNNGIDYTTESSLPRMDLSEFFRPNNLTMFEDGKSASIDLLLILDPLEERTQMILSLVEQFRPLKFVNIQVILMPTLELNIVPIRRIYVDDADIVKSITSEDSRSDPEVDIEMDVPNSFIVDNNYRIKKLLIELHSFSSKTVLSTGNIDGMGGVCLALVDSAGNIIDKTTTMKTFGYGQFHTDKFLKGCYIKSCDSRYTVQSFSTDGHPDFIPSDSLDILSYNPQKIAVKISEEPTHEEEYEEGRNNDTIINIFTILESGPDEEERYMQMILSILSKCPETQKVNFFILDQPFISDTLRKSCEYINSSDEMRGNVIFLNYEWPQWLRPQRFSSRRRDVSRFLFLDVLLPQNISKVLYMSPTEVPLDPFDIFQFQGLKRAPLGLFRMSGDGYWKEGYWEKMLRENNLEFYSTEPAFLVNLERFRELDAGDKYRIHYQRISTDAMSLVNIGQDLVNNLQLEVPIRFLKGSYKKKLVINDECVSEWKKKINKFASSPGDEDVPGESVSSKYQDSDNAAPLHDEL';
rad53 = 'MENITQPTQQSTQATQRFLIEKFSQEQIGENIVCRVICTTGQIPIRDLSADISQVLKEKRSIKKVWTFGRNPACDYHLGNISRLSNKHFQILLGEDGNLLLNDISTNGTWLNGQKVEKNSNQLLSQGDEITVGVGVESDILSLVIFINDKFKQCLEQNKVDRIRSNLKNTSKIASPGLTSSTASSMVANKTGIFKDFSIIDEVVGQGAFATVKKAIERTTGKTFAVKIISKRKVIGNMDGVTRELEVLQKLNHPRIVRLKGFYEDTESYYMVMEFVSGGDLMDFVAAHGAVGEDAGREISRQILTAIKYIHSMGISHRDLKPDNILIEQDDPVLVKITDFGLAKVQGNGSFMKTFCGTLAYVAPEVIRGKDTSVSPDEYEERNEYSSLVDMWSMGCLVYVILTGHLPFSGSTQDQLYKQIGRGSYHEGPLKDFRISEEARDFIDSLLQVDPNNRSTAAKALNHPWIKMSPLGSQSYGDFSQISLSQSLSQQKLLENMDDAQYEFVKAQRKLQMEQQLQEQDQEDQDGKIQGFKIPAHAPIRYTQPKSIEAETREQKLLHSNNTENVKSSKKKGNGRFLTLKPLPDSIIQESLEIQQGVNPFFIGRSEDCNCKIEDNRLSRVHCFIFKKRHAVGKSMYESPAQGLDDIWYCHTGTNVSYLNNNRMIQGTKFLLQDGDEIKIIWDKNNKFVIGFKVEINDTTGLFNEGLGMLQEQRVVLKQTAEEKDLVKKLTQMMAAQRANQPSASSSSMSAKKPPVSDTNNNGNNSVLNDLVESPINANTGNILKRIHSVSLSQSQIDPSKKVKRAKLDQTSKGPENLQFS';
prr1 = 'MDEYSSIYSQPKTPRLKQEGFPDSIGDQHEKALIDENGEEDKKMASTEGTTGDSRSTPLTVSIPTFENVQALPTPMTYTPLSPGNLSMSPIDQSSLNIPKRRSHARLLDDMLSVTQPNQRVVSELIAPANLSPQRVVSLPTVTEEALVNDSVDSDNYTKEPYFPESSSSTEKCDDDIFQGFLLDHWDRPLLWKKVRPIGSGNFSTVLLYELMDQSNPKLKQVAVKRLKYPEELSNVEQINTSLRYKETLSRLENSLTRELQVLKSLNHPCIVKLLGINNPIFVTSKKPLCDLIIKTPRALPPCDMIMSYCPAGDLLAAVMARNGRLEAWLIQRIFTEVVLAVKYLHENSIIHRDLKLENILLKYSFDDINSFRDSPIYCKQNFIELADFGLCKKIENNEMCTARCGSEDYVSPEILMGVPYDGHLSDTWALGVILYSLFEDRLPFDPPPNASARQRSRATSHRIARFDWRWYRLSDYKTNVGKQIVENTLTRKNQRWSINEIYESPFVKTIADTLSFS';
tsr2 = 'MSTQYIDETAFVQAEQGKTNLMFSDEKQQARFELGVSMVIYKWDALDVAVENSWGGPDSAEKRDWITGIVVDLFKNEKVVDAALIEETLLYAMIDEFETNVEDDSALPIAVEVINIYNDCFNLNYNKVEKLYLEWQEKQRTKKSKRVVHIEGDDDEDDEDVEDYDDEDEDEEMDEVVPDLVSSKPEPIVDEDGFELVQPKGRRKH';

results.seq = {tsr2; sec2; kre5; rad53; prr1};
N = length(results.seq);
results.z5 = zeros(N,1);
results.z7 = zeros(N,1);
for i=1:N
    [fcharge,~] = findPICurveWiki(results.seq{i},[5 7]);
    results.z5(i) = fcharge(1)/length(results.seq{i});
    results.z7(i) = fcharge(2)/length(results.seq{i});
end


pairings = nchoosek(1:N,2);
[results.actETotalNeutral,results.actETotalAcidic,results.actDE] = calculateAcidNeutralDE(results.z5,results.z7,pairings);
pairings = [ones(N,1) (1:N)'];
[results.actTSRETotalNeutral,results.actTSRETotalAcidic,results.actTSRDE] = calculateAcidNeutralDE(results.z5,results.z7,pairings);

for i=1:nTrials
    
    newProts = randperm(length(yCyt.id),N);
    pairings = nchoosek(1:length(newProts),2);
    z5 = phycfull.chPerLen(phycfull.pHRange == 5,newProts);
    z7 = phycfull.chPerLen(phycfull.pHRange == 7,newProts);
    z5 = z5(:);
    z7 = z7(:);
    
    [results.eTotalNeutral(i),results.eTotalAcidic(i),results.dE(i)] = calculateAcidNeutralDE(z5,z7,pairings);
    
    % Do same thing but swap one of the randomly chosen 5 for tsr2
    z5(1) = results.z5(1);
    z7(1) = results.z7(1);
    [results.tsrTotalNeutral(i),results.tsrTotalAcidic(i),results.tsrdE(i)] = calculateAcidNeutralDE(z5,z7,pairings);
    
    pairings2 = [ones(N,1) (1:N)'];
    [results.justtsrTotalNeutral(i),results.justtsrTotalAcidic(i),results.justtsrdE(i)] = calculateAcidNeutralDE(z5,z7,pairings2);
    
end

end

function [eTotalNeutral,eTotalAcidic,totaldE] = calculateAcidNeutralDE(z5,z7,pairings)

eTotalNeutral = z7(pairings(:,1))'*z7(pairings(:,2));
eTotalAcidic = z5(pairings(:,1))'*z5(pairings(:,2));
totaldE = sum(z5(pairings(:,1)).*z5(pairings(:,2)) - z7(pairings(:,1)).*z7(pairings(:,2)));
end